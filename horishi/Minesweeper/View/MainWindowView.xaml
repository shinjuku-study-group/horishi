<Window x:Class="Minesweeper.View.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:Minesweeper.Common"
        xmlns:v="clr-namespace:Minesweeper.View"
        xmlns:vm="clr-namespace:Minesweeper.ViewModel"
        Name="MainWindow"
        SizeToContent="WidthAndHeight"
        Title="{Binding Path=WindowTitle}"
        Width="{Binding Path=WindowWidth}"
        Height="{Binding Path=WindowHeight}"
        c:WindowCloseBehavior.Close="{Binding CloseWindow}"
        ResizeMode="NoResize">
    <Window.Resources>
        <Style TargetType="{x:Type ColumnDefinition}">
            <Setter Property="Width" Value="{Binding Path=CellWidth}" />
        </Style>
        <Style TargetType="{x:Type RowDefinition}">
            <Setter Property="Height" Value="{Binding Path=CellHeight}" />
        </Style>
        <Style x:Key="CellButton" TargetType="{x:Type c:CellButton}">
            <Setter Property="Width" Value="{Binding Path=Value.Width}" />
            <Setter Property="Height" Value="{Binding Path=Value.Height}" />
            <Setter Property="Command" Value="{Binding DataContext.ClickLeftCellCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <StackPanel>
        <StackPanel Orientation="Horizontal" >
            <Menu>
                <MenuItem Header="{Binding Path=MenubarViewModel.GameLevelMenuHeader}"
                          ItemsSource="{Binding Path=MenubarViewModel.GameLevelItemSources}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Path=Text}"/>
                            <Setter Property="IsChecked" Value="{Binding Path=IsChecked, Mode=TwoWay}"/>
                            <Setter Property="Command" Value="{Binding DataContext.MenubarViewModel.GameLevelClickCommand, RelativeSource={RelativeSource AncestorType=Menu}}"/>
                            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="{Binding Path=MenubarViewModel.OptionMenuHeader}"
                          ItemsSource="{Binding Path=MenubarViewModel.OptionItemSources}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding}"/>
                            <Setter Property="Command" Value="{Binding DataContext.MenubarViewModel.OptionClickCommand, RelativeSource={RelativeSource AncestorType=Menu}}"/>
                            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </Menu>
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="{Binding Path=ContainerMargin}">
            <Label Name="RemainMineCountLabel" Content="{Binding Path=RemainMineCountLabel}" />
            <Label Name="RemainMineCount" Content="{Binding Path=RemainMineCount}" />
        </StackPanel>
        <ItemsControl Name="GridControll" ItemsSource="{Binding Path=CellGridItemsSource}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding Column}"
                                 Rows="{Binding Row}"
                                 Width="{Binding GridWidth}"
                                 Height="{Binding GridHeight}" >
                    </UniformGrid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <c:CellButton Content="{Binding Path=Value.Display}"
                                  Column="{Binding Path=Key.Column}"
                                  Row="{Binding Path=Key.Row}"
                                  Style="{DynamicResource CellButton}">
                        <c:CellButton.InputBindings>
                            <MouseBinding MouseAction="RightClick">
                                <MouseBinding.Command>
                                    <Binding Path="DataContext.ClickRightCellCommand" RelativeSource="{RelativeSource AncestorType=Window}" />
                                </MouseBinding.Command>
                                <MouseBinding.CommandParameter>
                                    <Binding RelativeSource="{RelativeSource AncestorType=c:CellButton}" />
                                </MouseBinding.CommandParameter>
                            </MouseBinding>
                        </c:CellButton.InputBindings>
                    </c:CellButton>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Button Name="StartButton"
                Content="{Binding Path=StartButtonContext}"
                Width="{Binding Path=GridWidth}"
                Command="{Binding Path=ClickStartButtonCommand}"
                Margin="{Binding Path=ContainerMargin}" />

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
            <Label Name="ClearTimeLabel" Content="{Binding Path=ClearTimeLabelContext}" />
            <Label Name="ClearTime" Content="{Binding Path=ClearTime}"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
            <Label Name="ClearText" Content="{Binding Path=ClearTextLableContext}" />
        </StackPanel>
    </StackPanel>
</Window>
